{"version":3,"sources":["components/Form.jsx","components/Header.jsx","components/Footer.jsx","components/AdvancedGridList.jsx","components/App.jsx","index.js"],"names":["Form","props","onSubmit","event","preventDefault","onFormSubmit","type","placeholder","required","value","userInput","onChange","onFormChange","target","Header","Footer","year","Date","getFullYear","Typography","Link","href","className","AdvancedGridList","classes","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","backgroundImage","gridList","width","height","transform","titleBar","icon","color","useStyles","defualtItems","handleDelete","deleteOutcome","GridList","cellHeight","spacing","outcomeList","map","outcomeItem","index","GridListTile","cols","rows","src","imgUrl","alt","result","GridListTileBar","title","prediction","titlePosition","actionIcon","IconButton","aria-label","onClick","actionPosition","App","useState","outcome","setOutcome","setPrediction","getLatestOutcomes","fetch","then","response","ok","json","data","useEffect","inputValue","method","body","JSON","stringify","headers","message","console","log","onDelete","id","id_num","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c6456fd.chunk.js","sourcesContent":["import React from 'react';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nfunction Form(props){\n\n    function handleChange(event){\n        props.onFormChange(event.target.value)\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        props.onFormSubmit();\n\n    }\n\n    return <form onSubmit={handleSubmit}>\n            <input type=\"text-area\" placeholder=\"Enter the article name here\" required value={props.userInput}onChange={handleChange}></input>\n            <button type=\"submit\">\n                <RadioButtonCheckedIcon/>\n            </button>\n    </form>\n}\n\nexport default Form;","import React from \"react\";\nimport PanToolIcon from '@material-ui/icons/PanTool';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <PanToolIcon /> \n         ClickBait Predictor App\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;","  import React from \"react\";\n  import LinkedInIcon from '@material-ui/icons/LinkedIn';\n  import GitHubIcon from '@material-ui/icons/GitHub';\n  import FacebookIcon from '@material-ui/icons/Facebook';\n  import Typography from '@material-ui/core/Typography';\n  import Link from '@material-ui/core/Link';\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright ⓒ Bart Venter {year}</p>\n      <Typography >\n      <Link href={\"https://www.linkedin.com/in/bart-venter-ca-sa-606bb0141/\"}>\n      <LinkedInIcon className=\"footerbutton\"/>\n      </Link>\n      <Link href={\"https://github.com/bartventer?tab=repositories\"}>\n      <GitHubIcon className=\"footerbutton\"/>\n      </Link>\n      <Link href={\"https://www.facebook.com/bart.venter.12\"}>\n      <FacebookIcon className=\"footerbutton\"/>\n      </Link>\n      </Typography>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\n/**\n * The data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     featured: true,\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\nfunction AdvancedGridList(props) {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n      backgroundImage: 'url(\"https://www.transparenttextures.com/patterns/asfalt-dark.png\")',\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    titleBar: {\n      background:\n        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    icon: {\n      color: 'white',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const defualtItems = [\"“How to Achieve Results Using This One Weird Trick”\",\"“You'll Never Believe This _________ “\",\"“They Didn't Know _________ . Then This Happened …”\"];\n\n  function handleDelete(event){\n    props.deleteOutcome(event.target.value)\n  }\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={200} spacing={1} className={classes.gridList}>\n        {props.outcomeList.map((outcomeItem, index) => (\n          <GridListTile key={index} cols={index in [0,3,9,11,17] ? 2 : 1} rows={index in [0,3,9,11,17] ? 2 : 1}>\n            <img src={outcomeItem.imgUrl} alt={outcomeItem.result} />\n            <GridListTileBar\n              title={outcomeItem.prediction}\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label={`star ${outcomeItem.prediction}`} className={classes.icon}>\n                  { outcomeItem.prediction in defualtItems? <StarBorderIcon value={index}/>:<DeleteForeverIcon onClick={handleDelete} value={index}/>}\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n\nexport default AdvancedGridList;","import React, {useState, useEffect} from 'react';\nimport Form from './Form';\nimport Header from './Header';\nimport Footer from './Footer';\nimport AdvancedGridList from \"./AdvancedGridList\";\n\nfunction App(){\n\n    const [outcome, setOutcome]=useState([]);\n\n    const [prediction, setPrediction]=useState('');\n\n    useEffect(() => {\n        fetch('/api').then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => setOutcome(data))\n    },[])\n\n    function handleFormChange(inputValue){\n        setPrediction(inputValue);\n    }\n\n    function handleFormSubmit(){\n        fetch('/api/predict', {\n            method: 'POST',\n            body: JSON.stringify({\n                title:prediction\n            }),\n            headers: {\n                \"Content-Type\": \"application/json; charset=UTF-8\"\n                }\n        }).then(response => response.json())\n        .then(message => {\n            console.log(message);\n            setPrediction('');\n            getLatestOutcomes();\n            })\n        }\n\n    function getLatestOutcomes(){\n        fetch('/api').then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => \n           setOutcome(data))\n    }\n\n    function deleteOutcome(id){\n        fetch('api/delete', {\n            method: 'POST',\n            body: JSON.stringify({\n                id_num:id\n            }),\n            headers: {\n                \"Content-Type\": \"application/json; charset=UTF-8\"\n                }\n        }).then(response => response.json())\n        .then(message => {\n            console.log(message);\n            getLatestOutcomes();\n            })\n        }\n\n    return <div>\n            <Header/>\n            <h3 className=\"guidance\">There's too much clickbait going around. Simply enter the name of the article and the site will predict whether the piece is clickbait or not. We'll generate an image with your result.</h3>\n            <Form userInput={prediction} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit}/>\n            \n            <AdvancedGridList\n              outcomeList={outcome}\n              onDelete={deleteOutcome}\n            />\n\n          <Footer/>\n\n          </div>\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}